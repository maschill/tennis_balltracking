Creating tfrecord file for images go to:
https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/using_your_own_dataset.md


tf.record files müssen selbst erstellt werden, da git Speicher zu klein.
1.) Datei mit Annotationen in cvtennis/annotations suchen.
2.) videoname_test.record und videoname_train.record files in cvtennis/tensorflow/data erstellen
3.) txt python_to_tfrecord_multiclass.py --input_path=../annotations/file_train_test.txt --output_path=/home/lea/Dokumente/FSU/Anwendungspraktikum/tensorflow/data/file_train_test.record --image_folder=/home/lea/Dokumente/FSU/Anwendungspraktikum/Videos/file
Beispiel:
python txt_to_tfrecord_multiclass.py --input_path=../annotations/GoProDiffAnnotation_test.txt --output_path=/home/lea/Dokumente/FSU/Anwendungspraktikum/cvtennis/tensorflow/data/GoProDiff_test.record --image_folder=/home/lea/Dokumente/FSU/Anwendungspraktikum/Videos/GoPro/GoProFramesDiff/
4.) In tensorflow/data map.pbtxt erstellen mit entsprechenden Klassen
5.) in tensorflow/models config file erstellen (Zu ändern:
- Input files .record
- Number classes
- finetune checkpoints
- map file .pbtxts)

In /models/training werden checkpoints gespeichert (checkpoints sind in gitignore, erst wenn model gut genug für weitere Berechnungen ist)


Run in console:
TF RECORDS ERSTELLEN /TENSORFLOW
Umgebung: Egal; Rechner: Egal
python txt_to_tfrecord.py --input_path=/home/mueller/code/python/Anwendungspraktikum/cvtennis/annotations/GoProBall_train.txt --output_path=/home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/data/GoProBallAll_train.record --image_folder=/home/mueller/code/python/Anwendungspraktikum/Videos/GoPro/GoProFrames

TRAINING /OBJECT_DETECTION
Umgebung: testGPU; Rechner: Am besten Atlas3
python train.py --logtostderr --train_dir=/home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/models/GoProBall1742 --pipeline_config_path=/home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/faster_rcnn_resnet101_Ball.config

TENSORBOARD /OBJECT_DETECTION
Umgebung: Egal; Rechner: Egal
Open in browser: http://argus4:6006
tensorboard --logdir='/home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/models/GoProBallNew'

EXPORT INFERENCE GRAPH /OBJECT_DETECTION
Umgebung: testGPU; Rechner: egal
python export_inference_graph.py --input_type image_tensor --pipeline_config_path /home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/models/GoProBall1742/pipeline.config --trained_checkpoint_prefix=/home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/models/GoProBall1742/model.ckpt-1719 --output_directory=/home/mueller/code/python/Anwendungspraktikum/cvtennis/tensorflow/models/GoProBall1742Graph/

RUN VIDEO /TENSORFLOW
Umgebung: testGPU; Rechner: Am besten Atlas3
python run_video_spieler.py /home/mueller/code/python/Anwendungspraktikum/Videos/GoPro/GoProFrames Ball

